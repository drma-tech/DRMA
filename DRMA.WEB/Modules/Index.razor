@page "/"
@page "/index"
<SeoHeader Title="Home" Description="..." Url="/"></SeoHeader>
@inherits PageCore<Index>

@inject IJSRuntime JsRuntime

@* <Div TextAlignment="TextAlignment.Center">
    @if (Navigation.BaseUri.Contains("localhost") || Navigation.BaseUri.Contains("dev"))
    {
        <div class="adsbygoogle google-ads" style="background-color: black;"></div>
    }
    else
    {
        <ins class="adsbygoogle google-ads" data-ad-client="ca-pub-3885428939386350" data-ad-slot="3165413564"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    }
</Div> *@

<div class="container col-xxl-8 px-4 py-4">
    <div class="row flex-lg-row-reverse align-items-center justify-content-center g-5">
        <div class="col-12 col-sm-8 col-sm-2 col-lg-6 bg-dark" style="border-radius: 5px;">
            <img src="icon/icon-512.png" class="d-block mx-lg-auto img-fluid" alt="DRMA Tech" width="700" height="500" loading="lazy">
        </div>
        <div class="col-lg-6">
            <h1 class="display-6 fw-bold text-body-emphasis lh-1 mb-4">DRMA Tech</h1>
            <p class="lead text-justify mb-4">Delivering Reliable Modern Apps</p>
        </div>
    </div>
</div>

<div class="container px-4 py-4">
    <h2 class="pb-2 border-bottom">Our Products</h2>

    <div class="row align-items-md-center g-5 py-5">
        <div class="col-12 col-lg-5 d-flex flex-column align-items-start gap-2">
            <h2 class="fw-bold text-body-emphasis text-center">
                Delivering Reliable Modern Apps
            </h2>
            <p class="text-body-secondary text-justify">
                Delivering Reliable Modern Apps
            </p>
        </div>

        <div class="col-12 col-lg-7">
            <div class="row row-cols-1 row-cols-sm-2 g-4">
                <div class="col d-flex flex-column gap-2">
                    <Div Width="Width.Rem(3)" Height="Height.Rem(3)" Border="Border.Rounded.Is1" TextColor="TextColor.White"
                         Flex="Flex.AlignItems.Center.JustifyContent.Center">
                        <Image Source="logos/sd.png" Height="Height.Is100"></Image>
                    </Div>
                    <h4 class="fw-semibold mb-0 text-body-emphasis">Streaming Discovery</h4>
                    <Blazorise.Link To="https://www.streamingdiscovery.com/" Target="Target.Blank">
                        www.streamingdiscovery.com
                    </Blazorise.Link>
                    <Paragraph TextColor="TextColor.Muted" TextSize="TextSize.Small" TextAlignment="TextAlignment.Justified">
                        Your personal streaming assistant! Organize your platforms, track your progress, and find new content to watch — all in one app.
                    </Paragraph>
                </div>
                <div class="col d-flex flex-column gap-2">
                    <Div Width="Width.Rem(3)" Height="Height.Rem(3)" Border="Border.Rounded.Is1" TextColor="TextColor.White"
                         Flex="Flex.AlignItems.Center.JustifyContent.Center">
                        <Image Source="logos/mm.png" Height="Height.Is100"></Image>
                    </Div>
                    <h4 class="fw-semibold mb-0 text-body-emphasis">Modern Matchmaker</h4>
                    <Blazorise.Link To="https://www.modern-matchmaker.com/" Target="Target.Blank">
                        www.modern-matchmaker.com
                    </Blazorise.Link>
                    <Paragraph TextColor="TextColor.Muted" TextSize="TextSize.Small" TextAlignment="TextAlignment.Justified">
                        The future of finding love is here. Smarter, faster, and more affordable than traditional matchmaking. Our AI-powered system finds your perfect match with precision. Stop searching - let technology do the work.
                    </Paragraph>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter][SupplyParameterFromQuery(Name = "language")] public string? language { get; set; }
    [Parameter][SupplyParameterFromQuery(Name = "platform")] public string? platform { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (platform.NotEmpty())
        {
            await JsRuntime.InvokeAsync<string>("SetLocalStorage", "platform", platform);
        }
        else
        {
            await JsRuntime.InvokeAsync<string>("TryDetectPlatform");
        }
    }
}